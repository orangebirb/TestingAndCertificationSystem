@using TestingAndCertificationSystem.Resources;
@model PaginationGeneric<TestResults>

@{
    List<TestingAndCertificationSystem.Registration> registrations = ViewBag.registrations;
}

<div class="col-md-10">
    <h2 class="text-gradient-orange2">Your tests attempts</h2>
    <br />
</div>

@if (Model.source.Count() == 0)
{
    <div class="col-md-10">
        <div class="alert alert-info" role="alert">
            No attempts found
        </div>
    </div>
}
else
{
    <table class="table">
        <tr>
            <th class="text-gradient-orange1">Test</th>
            <th class="text-gradient-orange2"><a asp-action="UserAttempts" asp-route-sortOrder="@ViewBag.DateSortParm">Start time</a></th>
            <th class="text-gradient-orange2"><a asp-action="UserAttempts" asp-route-sortOrder="@ViewBag.MarkSortParm">Mark</a></th>
            <th class="text-gradient-orange2"><a asp-action="UserAttempts" asp-route-sortOrder="@ViewBag.PassSortParm">Result</a></th>
            <th></th>
        </tr>
        @foreach (var attempt in Model.source)
        {
            var registration = registrations.Where(x => x.Id == attempt.RegistrationId).FirstOrDefault();

            <tr>
                <td>
                    @if (registration.TestId != null)
                    {
                        <form asp-controller="Tests" asp-action="Instruction" asp-route-testId="@registration.TestId" method="post">
                            <button type="submit" class="btn btn-sm btn-outline-info">Test page</button>
                        </form>
                    }
                    else
                    {
                        <button class="btn btn-sm btn-outline-danger" disabled>Test deleted</button>
                    }

                </td>
                <td>
                    @registration.EntryTime
                </td>
                <td>
                    @attempt.FinalMarkInPercents
                </td>
                <td>
                    @if (attempt.IsPassed == true)
                    {
                        <div class="alert alert-success" style="line-height: 30px; padding: 0px 15px;">
                            Passed
                        </div>
                    }
                    else
                    {
                        <div class="alert alert-danger" style="line-height: 30px; padding: 0px 15px;">
                            Failed
                        </div>
                    }
                </td>
            </tr>
        }
    </table>

    var previousDisabled = !Model.pagination.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.pagination.HasNextPage ? "disabled" : "";

    <a asp-action="UserAttempts"
       asp-route-page="@(Model.pagination.PageNum - 1)"
       asp-route-sortOrder="@ViewData["CurrentSort"]"
       class="btn text-gradient-orange2 border-orange2 @previousDisabled">
        Previous
    </a>

    <small>Page @ViewBag.Page of @ViewBag.PageCount</small>

    <a asp-action="UserAttempts"
       asp-route-page="@(Model.pagination.PageNum + 1)"
       asp-route-sortOrder="@ViewData["CurrentSort"]"
       class="btn text-gradient-orange2 border-orange2 @nextDisabled">
        Next
    </a>

}