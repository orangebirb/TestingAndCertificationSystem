@using TestingAndCertificationSystem.Resources;
@model PaginationGeneric<Registration>

@{
    List<UserIdentity> users = ViewBag.users;
    List<TestResults> results = ViewBag.results;
}


<div class="col-md-10">
    <h2 class="text-gradient-orange2">"@ViewBag.TestName" test attempts</h2>
    &nbsp;&nbsp;&nbsp;&nbsp;
    <i class="fas fa-caret-left orange1"></i>
    <a class="btn-link orange1" asp-controller="Tests" asp-action="Tests">
        Back to tests
    </a>
    <br />
    <br />
</div>

@if (Model.source.Count() == 0)
{
    <div class="col-md-10">
        <div class="alert alert-info" role="alert">
            No attempts found
        </div>
    </div>
}
else
{
    <table class="table">
        <tr>
            <th class="text-gradient-orange1">User</th>
            <th class="text-gradient-orange2">
                <a asp-action="TestAttempts" asp-route-testId="@Model.source.FirstOrDefault().TestId"
                   asp-route-sortOrder="@ViewBag.DateSortParm">Entry time</a>
            </th>
            <th class="text-gradient-orange2">
                <a asp-action="TestAttempts" asp-route-testId="@Model.source.FirstOrDefault().TestId"
                   asp-route-sortOrder="@ViewBag.PassSortParm">Status</a>
            </th>
            <th class="text-gradient-orange2">
                <a asp-action="TestAttempts" asp-route-testId="@Model.source.FirstOrDefault().TestId"
                   asp-route-sortOrder="@ViewBag.MarkSortParm">Mark</a>
            </th>
            <th></th>
        </tr>
        @foreach (var attempt in Model.source)
        {
            <tr>
                <td>
                    @if (users != null)
                    {
                        <div>
                            @{
                                var user = users.Where(x => x.Id == attempt.UserId).FirstOrDefault();
                            }
                            @user.FirstName&nbsp;@user.LastName
                        </div>
                    }
                </td>
                <td>@attempt.EntryTime</td>

                @if (results != null)
                {
                    var result = results.Where(x => x.RegistrationId == attempt.Id).FirstOrDefault();

                    @if (result != null)
                    {
                        <td>
                            @if (result.IsPassed == true)
                            {
                                <div class="alert alert-success" style="line-height: 30px; padding: 0px 15px;">
                                    Passed
                                </div>
                            }
                            else
                            {
                                <div class="alert alert-danger" style="line-height: 30px; padding: 0px 15px;">
                                    Failed
                                </div>
                            }
                        </td>

                        <td>
                            @result.FinalMarkInPercents%
                        </td>

                        <td>
                            <form asp-controller="Tests" asp-action="AttemptInfopage" asp-route-registrationId="@attempt.Id">
                                <button type="submit" class="btn btn-sm btn-success"> Details </button>
                            </form>
                        </td>
                    }
                }
            </tr>
        }
    </table>

    var previousDisabled = !Model.pagination.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.pagination.HasNextPage ? "disabled" : "";

    <a asp-action="TestAttempts"
       asp-route-testId="@Model.source.FirstOrDefault().TestId"
       asp-route-page="@(Model.pagination.PageNum - 1)"
       asp-route-sortOrder="@ViewData["CurrentSort"]"
       class="btn text-gradient-orange2 border-orange2 @previousDisabled">
        Previous
    </a>

    <small>Page @ViewBag.Page of @ViewBag.PageCount</small>

    <a asp-action="TestAttempts"
       asp-route-testId="@Model.source.FirstOrDefault().TestId"
       asp-route-page="@(Model.pagination.PageNum + 1)"
       asp-route-sortOrder="@ViewData["CurrentSort"]"
       class="btn text-gradient-orange2 border-orange2 @nextDisabled">
        Next
    </a>
}